name: Build Wheels

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest]
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v4

      # Set up Python environment
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install build dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy
          python -m pip install cibuildwheel==2.22.0
          python -m pip install setuptools wheel cython

      # Skip pp39-macosx_arm64
      - name: Set environment for cibuildwheel
        run: echo "CIBW_SKIP=pp39-macosx_arm64" >> $GITHUB_ENV

      - name: Set CIBW_ARCHS for Linux (x86_64)
        if: ${{ runner.os == 'Linux' && matrix.os != 'ubuntu-24.04-arm' }}
        run: echo "CIBW_ARCHS=x86_64" >> $GITHUB_ENV

      - name: Set CIBW_ARCHS for Ubuntu 24.04 ARM
        if: ${{ runner.os == 'Linux' && matrix.os == 'ubuntu-24.04-arm' }}
        run: echo "CIBW_ARCHS=aarch64" >> $GITHUB_ENV

      - name: Set CIBW_ARCHS for Windows and macOS (x86_64, arm64)
        if: ${{ runner.os != 'Linux' }}
        run: echo "CIBW_ARCHS=x86_64 arm64" >> $GITHUB_ENV

      # Clean up build files (Linux/macOS)
      - name: Clean up build files (Linux/macOS)
        if: ${{ runner.os != 'Windows' }}
        run: |
          rm -rf build dist *.egg-info *.so *.o
          git clean -fdx

      # Clean up build files (Windows)
      - name: Clean up build files (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          if (Test-Path -Path "build") { Remove-Item -Recurse -Force "build" }
          if (Test-Path -Path "dist") { Remove-Item -Recurse -Force "dist" }
          Get-ChildItem -Path ".\*.egg-info" -Directory | Remove-Item -Recurse -Force
          Get-ChildItem -Path ".\*.dll" -Recurse | Remove-Item -Force
          Get-ChildItem -Path ".\*.obj" -Recurse | Remove-Item -Force
          git clean -fdx

      # Clean up cache (Linux/macOS)
      - name: Clean up cache (Linux/macOS)
        if: ${{ runner.os != 'Windows' }}
        run: |
          rm -rf ~/.cache/pip
          rm -rf ~/.cibuildwheel
          git clean -fdx

      # Clean up cache (Windows)
      - name: Clean up cache (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          if (Test-Path -Path "$env:USERPROFILE\.cache\pip") { Remove-Item -Recurse -Force "$env:USERPROFILE\.cache\pip" }
          if (Test-Path -Path "$env:USERPROFILE\.cibuildwheel") { Remove-Item -Recurse -Force "$env:USERPROFILE\.cibuildwheel" }
          git clean -fdx

      # Build the wheels using cibuildwheel
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      # Upload the built wheels as artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
